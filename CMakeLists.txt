cmake_minimum_required(VERSION 2.8)
PROJECT(MetaObject)
CMAKE_POLICY(SET CMP0020 NEW)
include("${CMAKE_CURRENT_LIST_DIR}/cmake/CMakeMacros.cmake")
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

set(link_libs "")

set(Boost_required_components thread log log_setup)
find_package(PythonLibs QUIET)
if(PythonLibs_FOUND)
  set(Boost_required_components "${Boost_required_components} python")
  list(APPEND link_libs "${PYTHON_LIBRAY}")
endif()

find_package(Boost REQUIRED COMPONENTS ${Boost_required_components})
  include_directories(${Boost_INCLUDE_DIRS})
  IF(NOT WIN32)
    ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)
  ENDIF(NOT WIN32)

find_package(cereal REQUIRED)
if(cereal_FOUND)
  include_directories(${cereal_INCLUDE_DIRS})
endif()

file(GLOB_RECURSE src "src/*.cpp")
file(GLOB_RECURSE hdr "include/*.h" "include/*.hpp")
include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
GroupSources(include)
GroupSources(src)
  
add_library(MetaObject SHARED ${src} ${hdr})

if(Boost_UNIT_TEST_FRAMEWORK_FOUND)
  file(GLOB_RECURSE test_srcs "tests/*.cpp")
  include(CTest)
  enable_testing()
  foreach(fn ${test_srcs})
    find_package(CUDA REQUIRED)
    get_filename_component(_cuda_lib_dir "${CUDA_CUDART_LIBRARY}" DIRECTORY)
    link_directories(${_cuda_lib_dir})
    get_filename_component(name ${fn} NAME_WE)
    add_executable(${name} "${fn}")
    TARGET_LINK_LIBRARIES(${name} MetaObject ${Parameters_LIBRARIES} ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
    ADD_DEPENDENCIES(${name} MetaObject)
    set_target_properties(${name} PROPERTIES FOLDER Tests/MetaObject)
    set_target_properties(${name} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/tests)
    add_test(${name} ${name})
    if(MSVC)
      #CONFIGURE_FILE("test/Test.vcxproj.user.in" ${CMAKE_BINARY_DIR}/EagleLib/parameters/${name}.vcxproj.user @ONLY)
    endif()
  endforeach()
endif()
